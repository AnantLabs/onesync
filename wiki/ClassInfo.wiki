#summary Class Information

= Classes =

  * [ClassInfo#SyncJob_Related_Classes SyncJob Related Classes]
    * [ClassInfo#SyncJob SyncJob]
    * [ClassInfo#SQLiteSyncJobManager SQLiteSyncJobManager]
  * [ClassInfo#SyncSource_Related_Classes SyncSource Related Classes]
    * [ClassInfo#SyncSource SyncSource]
    * [ClassInfo#SQLiteSyncSourceProvider SQLiteSyncSourceProvider]
  * [ClassInfo#SyncActions_Related_Classes SyncActions Related Classes]
    * [ClassInfo#SyncActions SyncAction]
    * [ClassInfo#SyncActions CreateAction]
    * [ClassInfo#SyncActions DeleteAction]
    * [ClassInfo#SyncActions RenameAction]
  * [ClassInfo#Metadata_Related_Classes Metadata Related Classes]
    * [ClassInfo#FileMetadata FileMetadata]
    * [ClassInfo#FileMetadataItem FileMetadataItem]
    * [ClassInfo#SQLiteMetadataProvider SQLiteMetadataProvider]
  * [ClassInfo#Intermediary_Storage Intermediary Storage]

----

== !SyncJob Related Classes ==

=== !SyncJob ===

SyncJob represents information about a synchronization job. It stores information about the folder being synchronized (SyncSource) and the intermediary storage (IntermediaryStorage). A SyncJob is uniquely identified by its name on a PC. Internally, it also uses a unique id.

SyncJobManager is used to manage SyncJob object. This includes saving and restoring a SyncJob to storage as well as modifying SyncJob information.

[http://www.comp.nus.edu.sg/~deskoh/devGuide/syncjob01.png]


=== SQLiteSyncJobManager ===

The SQLiteSyncJobManager inherits from SyncJobManager abstract class. On instantiation, it will check if the database schema is created and creates it if necessary.

[http://www.comp.nus.edu.sg/~deskoh/devGuide/syncjob02.png]

----

== !SyncSource Related Classes ==

=== SyncSource ===

SyncSource encapsulates information about the folder being synchronized and possibly other information regarding the PC where the folder is. Each SyncSource has a unique GUID. It should be noted that there can be 2 different SyncSource object that represents the same folder on a PC. This is to allow a folder to be part of 2 different SyncJob.

=== !SQLiteSyncSourceProvider ===

The SQLiteSyncSourceProvider inherits from SyncSourceProvider abstract class. On instantiation, it will check if the database schema is created and creates it if necessary.

----

== !SyncActions Related Classes ==

=== !SyncAction ===

SyncAction is an abstract class. It represents actions to be taken during synchronization. Each action is associated with at least a file (to be either copied, deleted). Hence, an action contains fields related to the file it is associated with (e.g. file hash) and which id of SyncSource where the file originates from.

=== !CreateAction ===

A CreateAction represents a file to be copied. This action is generated when a file is modified or created.

=== !DeleteAction ===

A DeleteAction represents a file to be deleted. This action generated if a file that previously used to exist (by reading the metadata) no logner exist now.

=== !RenameAction ===

RenameAction is currently not implemented yet.

----

== Metadata Related Classes ==

=== !FileMetadata ===

=== !FileMetadataItem ===

=== SQLiteMetadataProvider ===

----

=== Intermediary Storage ===