#summary Explains how OneSync works

== Introduction ==

OneSync allows 2 folders to be synchronized through an common intermediary 

storage such as a flashdrive. Therefore, it enables the user to perform 

synchronization between 2 different PCs. The common intermediary storage is 

not limited to flashdrive but could be any location from both PCs such as 

shared folder over LAN and even synchronized DropBox folder.

----

== Lightweight Sync ==

OneSync only stores modified/newly created files on the intermediary 

storage in order to maximize storage efficiency. Hence it is possible to 

use a flashdrive that has a smaller capacity than the folder that is being 

synchronized.

----

== Sync Job ==

Each PC will be able to create a Sync Job with a user-specifed name. The 

name of a Sync Job on each PC will be unique. A Sync Job remembers the 

folder to be synchronized as well as the path to the intermediary storage. 

Hence it is possible for a folder to belong to more than 1 sync job. After 

a Sync Job is created, a user just needs to select the job everytime he 

needs sync.

----

== FileSystem Metadata ==

During each synchronization, the filesystem of the folder to be 

synchronized is being saved to intermediary storage be used for comparison 

on the other PC. Information being saved are as follows:
  * Relative file path
  * File Hash
  * Last modified time
  * NTFS ID

== SyncSource ==
A SyncSource refers to a folder that is being synchronized as well as the 

absolute path of the root folder being synchronized. Each SyncSource is 

uniquely identified by a GUID.

== Patch ==
After each synchronization, a patch will be created in the intermediary 

storage. This patch is generated by comparing current filesystem with the 

filesystem (which is stored as metadata) on the intermediary storage. This 

patch consists of SyncActions to be taken to make the other folder 

synchcronized as well as files that needs to be copied. However, a patch is 

 a only a concept that encapsulates the above but is not an actual class in 

our implementation.

== Intermediary Storage ==

The following files are stored on the intermediary storage.
  * Modified files
  * Patch.